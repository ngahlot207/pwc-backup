@isTest
public class ObligationDetailsSummaryControllerTest {
    @isTest
    static void testObligationMethod() {
        Account acc = new Account();
        acc.Name = 'Test Acc';
        TriggerBase.bypass('Account');
        insert acc;
        TriggerBase.clearbypass('Account');       
        SchMapping__c schMap = new SchMapping__c();
        TriggerBase.bypass('SchMapping__c');
        insert schMap;
        TriggerBase.clearbypass('SchMapping__c');     
        LoanAppl__c la = TestDataFactory.createLoanApplication(true);
        la.LoginAcceptDate__c = System.today();
        la.ChanelNme__c = acc.id;
        la.BrchCode__c = '123456';
        la.SchemeId__c = schMap.id;
        TriggerBase.bypass('LoanAppl__c');
        update la;
        TriggerBase.clearbypass('LoanAppl__c');
        BankBrchMstr__c bankMst = new BankBrchMstr__c();
        bankMst.BrchCode__c = '123456';
        TriggerBase.bypass('BankBrchMstr__c');
        insert bankMst;
        TriggerBase.clearbypass('BankBrchMstr__c');        
        Applicant__c app = new Applicant__c();
        app.LoanAppln__c = la.id;
        app.ApplType__c = 'P';
        app.Type_of_Borrower__c='Financial';
        TriggerBase.bypass('Applicant__c');
        insert app;
        TriggerBase.clearbypass('Applicant__c');
        Bre__c bre= new Bre__c();
        bre.Applicant__c = app.id;
        bre.EligibilityType__c='Application';
        bre.isLatest__c=true;
        bre.LoanAppl__c = la.id;
        bre.Mnthlyapprincome__c = 3455445;
        bre.IsLatest__c = TRUE;
        TriggerBase.bypass('Bre__c');
        insert bre;
        TriggerBase.clearbypass('Bre__c');
              
        BureauRespDtl__c burwresDtl = new BureauRespDtl__c();
        burwresDtl.Applicant__c = app.id;
        burwresDtl.Treatment__c='To continue - Obligate';
        burwresDtl.EMI__c = 7584846;
        TriggerBase.bypass('BureauRespDtl__c');
        insert burwresDtl;
        TriggerBase.clearbypass('BureauRespDtl__c');
        BureauRespDtl__c burwresDtl1 = new BureauRespDtl__c();
        burwresDtl1.Applicant__c = app.id;
        burwresDtl1.Treatment__c='To continue - Obligate';
        burwresDtl1.EMI__c = 758486;
        TriggerBase.bypass('BureauRespDtl__c');
        insert burwresDtl1;
        TriggerBase.clearbypass('BureauRespDtl__c');
        
        BRE_Eligibility__c breElig = new BRE_Eligibility__c();
        breElig.BREResponse__c = bre.id;
        breElig.IsLatest__c = true;
        breElig.Type__c = 'Applicant';
        breElig.IncomeProgram__c = 'Business income - Regular Income Program (P&L)';
        TriggerBase.bypass('BRE_Eligibility__c');
        insert breElig;
        TriggerBase.clearbypass('BRE_Eligibility__c');
        BRE_Eligibility__c breElig1 = new BRE_Eligibility__c();
        breElig1.BREResponse__c = bre.id;
        breElig1.IsLatest__c = true;
        breElig1.Type__c = 'Applicant';
        breElig1.IncomeProgram__c = 'Business income - Regular Income Program (P&L)';
        breElig1.IncomeProgram__c = 'Gross Eligible Salary with Bank Credit';
        TriggerBase.bypass('BRE_Eligibility__c');
        insert breElig1;
        TriggerBase.clearbypass('BRE_Eligibility__c');
        BRE_Eligibility__c breElig2 = new BRE_Eligibility__c();
        breElig2.BREResponse__c = bre.id;
        breElig2.IsLatest__c = true;
        breElig2.Type__c = 'Applicant';
        breElig2.IncomeProgram__c = 'Net Eligible Salary with Bank Credit';
        TriggerBase.bypass('BRE_Eligibility__c');
        insert breElig2;
        TriggerBase.clearbypass('BRE_Eligibility__c');
        Id appFincRt = Schema.SObjectType.Applicant_Financial__c.getRecordTypeInfosByName().get('Balance Sheet').getRecordTypeId();
        Applicant_Financial__c appFinance = new Applicant_Financial__c();
        appFinance.Loan_Applicant__c = app.id;
        appFinance.RecordTypeId = appFincRt;
        TriggerBase.bypass('Applicant_Financial__c');
        insert appFinance;
        TriggerBase.clearbypass('Applicant_Financial__c');
        Applicant_Financial_Summary__c appFinaceSum = new Applicant_Financial_Summary__c();
        	appFinaceSum.Applicant_Financial__c = appFinance.id;
        	appFinaceSum.Adjusted_tangible_Netwroth__c = 7000;
        	appFinaceSum.Total_Loan_funds__c= 7000;
            appFinaceSum.Sundry_creditors__c= 7000;
            appFinaceSum.Advances_from_customers__c= 7000;
            appFinaceSum.Other_current_liabilities__c= 7000;
            appFinaceSum.Provisions_for_exps_tax_etc__c= 7000;
            appFinaceSum.Bank_Borrowing_Working_Capital_OD_CC__c= 7000;
            appFinaceSum.LessSix_months__c= 7000;
            appFinaceSum.Stock__c= 7000;
            appFinaceSum.Greaterthan6__c= 7000;
            appFinaceSum.Advances_to_Suppliers__c= 7000;
            appFinaceSum.Investments__c= 7000;
            appFinaceSum.Other_loans_advances__c= 7000;
            appFinaceSum.Prepaid_expenses__c= 7000;
            appFinaceSum.Other_current_assets__c= 7000;
            appFinaceSum.Cash_Bank_Balances__c= 7000;
            appFinaceSum.Total_Loan_funds__c= 7000;
            appFinaceSum.Bank_Borrowing_Working_Capital_OD_CC__c= 7000;

        TriggerBase.bypass('Applicant_Financial_Summary__c');
        insert appFinaceSum;
        TriggerBase.clearbypass('Applicant_Financial_Summary__c');
        
        ApplKyc__c appKyc =new ApplKyc__c();
        appKyc.Applicant__c = app.id;
        appKyc.kycDoc__c = 'Passport';
        TriggerBase.bypass('ApplKyc__c');
        insert appKyc;
        TriggerBase.clearbypass('ApplKyc__c');
        
        ApplKyc__c appKyc1 =new ApplKyc__c();
        appKyc1.Applicant__c = app.id;
        appKyc1.kycDoc__c = 'Driving License';
        TriggerBase.bypass('ApplKyc__c');
        insert appKyc1;
        TriggerBase.clearbypass('ApplKyc__c');
        
        ApplKyc__c appKyc2 =new ApplKyc__c();
        appKyc2.Applicant__c = app.id;
        appKyc2.kycDoc__c = 'PAN';
        TriggerBase.bypass('ApplKyc__c');
        insert appKyc2;
        TriggerBase.clearbypass('ApplKyc__c');
        
        ApplGST__c appGST = new ApplGST__c();
        appGST.Applicant__c= app.id;
        appGST.GSTIN__c = '36AAACH7409R1Z2';
        appGST.GSTIN_Status__c = 'ACTIVE';
        appGST.Main_GSTIN__c = TRUE;
        TriggerBase.bypass('ApplGST__c');
        insert appGST;
        TriggerBase.clearbypass('ApplGST__c');
        
        
        ApplBanking__c appBank = new ApplBanking__c();
        appBank.Appl__c = app.id;
        appBank.LoanAppl__c = la.id;
        appBank.Type__c ='Banking Summary';
        appBank.Summary_Type__c ='Combined Banking (OD/CC)';
        TriggerBase.bypass('ApplBanking__c');
        insert appBank;
        TriggerBase.clearbypass('ApplBanking__c');
        ApplBanking__c appBank1 = new ApplBanking__c();
        appBank1.Appl__c = app.id;
        appBank1.LoanAppl__c = la.id;
        appBank1.Type__c ='Banking Summary';
        appBank1.Summary_Type__c ='Combined Banking (CASA)';
        TriggerBase.bypass('ApplBanking__c');
        insert appBank1;
        TriggerBase.clearbypass('ApplBanking__c');
        
        ApplBankDetail__c appBankDetails = new ApplBankDetail__c();
        appBankDetails.ApplBanking__c = appBank.id;
        TriggerBase.bypass('ApplBankDetail__c');
        insert appBankDetails;
        TriggerBase.clearbypass('ApplBankDetail__c');
        ApplBankDetail__c appBankDetails1 = new ApplBankDetail__c();
        appBankDetails1.ApplBanking__c = appBank1.id;
        appBankDetails1.MinBalanceCharges__c = 'Y';
        TriggerBase.bypass('ApplBankDetail__c');
        insert appBankDetails1;
        TriggerBase.clearbypass('ApplBankDetail__c');
       
        ApplAsset__c appAsst = new ApplAsset__c();
        appAsst.LoanAppln__c = la.id;
        appAsst.ValuationToBeTakenAheadForCalculation__c = 50000;
        appAsst.Appl__c = app.id;
        TriggerBase.bypass('ApplAsset__c');
        insert appAsst;
        TriggerBase.clearbypass('ApplAsset__c');
        Id caseRt = Schema.SObjectType.Case.getRecordTypeInfosByName().get('CPVFI').getRecordTypeId();
        Case c = new Case();
        c.Loan_Application__c = la.id;
        c.ApplAssetId__c = appAsst.id;
        c.Applicant__c = app.id;
        c.ReportResult__c = 'Positive';
        c.Address_Type__c = 'Residence Address';
        c.RecordTypeId = caseRt;
        TriggerBase.bypass('Case');
        insert c;
        TriggerBase.clearbypass('Case');
        
        Case c1 = new Case();
        c1.Loan_Application__c = la.id;
        c1.ApplAssetId__c = appAsst.id;
        c1.Applicant__c = app.id;
        c1.ReportResult__c = 'Positive';
        c1.Address_Type__c = 'Residence Cum office';
        c1.RecordTypeId = caseRt;
        TriggerBase.bypass('Case');
        insert c1;
        TriggerBase.clearbypass('Case');
        
        Id deduperecTypeId = Schema.SObjectType.DedupeResponse__c.getRecordTypeInfosByName().get('Dedupe').getRecordTypeId();
        DedupeResponse__c dedupeRes = new DedupeResponse__c();
        dedupeRes.LoanAppln__c = la.id;
        dedupeRes.Applicant__c = app.id;
        dedupeRes.IsLatest__c = TRUE;
        dedupeRes.IntnlDeduRelevance__c = 'Accurate Match found';
        dedupeRes.RecordTypeId = deduperecTypeId;
        TriggerBase.bypass('DedupeResponse__c');
        insert dedupeRes;
        TriggerBase.clearbypass('DedupeResponse__c');
        
        Id deduperecTypeId1 = Schema.SObjectType.DedupeResponse__c.getRecordTypeInfosByName().get('ENPA').getRecordTypeId();
        DedupeResponse__c dedupeRes1 = new DedupeResponse__c();
        dedupeRes1.LoanAppln__c = la.id;
        dedupeRes1.Loantobelinkedwithproposedloan__c = 'YES';
        dedupeRes1.Lan__c = la.id;
        dedupeRes1.Applicant__c = app.id;
        dedupeRes1.IsLatest__c = TRUE;
        dedupeRes1.IntnlDeduRelevance__c = 'Accurate Match found';
        dedupeRes1.RecordTypeId = deduperecTypeId1;
        TriggerBase.bypass('DedupeResponse__c');
        insert dedupeRes1;
        TriggerBase.clearbypass('DedupeResponse__c');
        ApplicantEmployment__c appEmp = new ApplicantEmployment__c();
        appEmp.LoanApplicant__c = app.id;
        appEmp.NatureOfBusinessIndividual__c = 'M';
        appEmp.Is_URC_UAC_available__c = 'YES';
        TriggerBase.bypass('ApplicantEmployment__c');
       	insert appEmp;
       	TriggerBase.clearBypass('ApplicantEmployment__c');
        ApplRegltry__c appReg = new ApplRegltry__c();
        appReg.LoanAppln__c = la.id;
        TriggerBase.bypass('ApplRegltry__c');
       	insert appReg;
       	TriggerBase.clearBypass('ApplRegltry__c');
        btloan__c btLoan = new btloan__c();
        btLoan.LoanAppl__c = la.id;
        TriggerBase.bypass('btloan__c');
       	insert btLoan;
       	TriggerBase.clearBypass('btloan__c');
        
        Id apiVerrecdTypeId = Schema.SObjectType.APIVer__c.getRecordTypeInfosByName().get('Watchout').getRecordTypeId();
        APIVer__c apiVer =new APIVer__c();
        apiVer.Appl__c = app.id;
        apiVer.IsLatest__c = TRUE;
        apiVer.RecordTypeId = apiVerrecdTypeId;
        TriggerBase.bypass('APIVer__c');
       	insert apiVer;
       	TriggerBase.clearBypass('APIVer__c');
        
        Id apiVerrecdTypeId1 = Schema.SObjectType.APIVer__c.getRecordTypeInfosByName().get('Screening').getRecordTypeId();
        APIVer__c apiVer1 =new APIVer__c();
        apiVer1.Appl__c = app.id;
        apiVer1.IsLatest__c = TRUE;
        apiVer1.RecordTypeId = apiVerrecdTypeId1;
        TriggerBase.bypass('APIVer__c');
       	insert apiVer1;
       	TriggerBase.clearBypass('APIVer__c');
        Test.startTest();
        ObligationDetailsSummaryController.getBankingDetailsSummaryForCASA(la.id);
        ObligationDetailsSummaryController.getLoanAppData(la.id);
        ObligationDetailsSummaryController.getFinancialSummaries(la.id);
        ObligationDetailsSummaryController.getApplicantEmploymentDetail(la.id);
        ObligationDetailsSummaryController.fetchRecords(la.id);
        ObligationDetailsSummaryController.getBorrowerDetails(la.id);
        ObligationDetailsSummaryController.getLoanDetailsSummary(la.id);
        ObligationDetailsSummaryController.getDecisionSummary(la.id);
        ObligationDetailsSummaryController.getSancionCondition(la.id);
        ObligationDetailsSummaryController.getDeviationDetail(la.id);
        ObligationDetailsSummaryController.getBorrowerFinalCPVSummaryDetails(la.id);
        ObligationDetailsSummaryController.getBorrowerVerificationDetail(la.id);
        ObligationDetailsSummaryController.getCollateralVerificationDetails(la.id);
        ObligationDetailsSummaryController.getCollateralVisitDetails(la.id);
        ObligationDetailsSummaryController.getBankingDetailsSummaryForODCC(la.id);
        ObligationDetailsSummaryController.getObligationDetailsSummary(la.id);
        ObligationDetailsSummaryController.getObligationDetailsSummaryBureau(la.id);
        ObligationDetailsSummaryController.propDetails(la.id);
        ObligationDetailsSummaryController.getfinancialSatement(app.id,'ApplicantDetails');
        ObligationDetailsSummaryController.getHLRelatedDetailsData(la.id);
        ObligationDetailsSummaryController.getConstructionRelatedDetailData(la.id);
        Test.stopTest();
    }
    
    @isTest
    static void testObligationMethod1() {
        LoanAppl__c la = TestDataFactory.createLoanApplication(true);
        Applicant__c app = TestDataFactory.createSingleApplicant(true, la.Id);
        
        Bre__c bre= new Bre__c();
        bre.Applicant__c = app.id;
        bre.EligibilityType__c = 'Applicant';
        bre.isLatest__c=true;
        bre.LoanAppl__c = la.id;
        bre.Mnthlyapprincome__c = 3455445;
        TriggerBase.bypass('Bre__c');
       	insert bre;
       	TriggerBase.clearBypass('Bre__c');
        
        BureauRespDtl__c burwresDtl = new BureauRespDtl__c();
        burwresDtl.Applicant__c = app.id;
        burwresDtl.Treatment__c='To continue - Obligate';
        burwresDtl.EMI__c = 7584846;
        TriggerBase.bypass('BureauRespDtl__c');
       	insert burwresDtl;
       	TriggerBase.clearBypass('BureauRespDtl__c');
        BureauRespDtl__c burwresDtl1 = new BureauRespDtl__c();
        burwresDtl1.Applicant__c = app.id;
        burwresDtl1.Treatment__c='To continue - Obligate';
        burwresDtl1.EMI__c = 758486;
        TriggerBase.bypass('BureauRespDtl__c');
       	insert burwresDtl1;
       	TriggerBase.clearBypass('BureauRespDtl__c');
        Id appFincRt = Schema.SObjectType.Applicant_Financial__c.getRecordTypeInfosByName().get('Profit & Loss').getRecordTypeId();
        Applicant_Financial__c appFinance = new Applicant_Financial__c();
        appFinance.Loan_Applicant__c = app.id;
        appFinance.RecordTypeId = appFincRt;
        TriggerBase.bypass('Applicant_Financial__c');
       	insert appFinance;
       	TriggerBase.clearBypass('Applicant_Financial__c');
        Applicant_Financial_Summary__c appFinaceSum = new Applicant_Financial_Summary__c();
        	appFinaceSum.Applicant_Financial__c = appFinance.id;
        	appFinaceSum.Adjusted_tangible_Netwroth__c = 7000;
        	appFinaceSum.Total_Loan_funds__c= 7000;
            appFinaceSum.Sundry_creditors__c= 7000;
            appFinaceSum.Advances_from_customers__c= 7000;
            appFinaceSum.Other_current_liabilities__c= 7000;
            appFinaceSum.Provisions_for_exps_tax_etc__c= 7000;
            appFinaceSum.Closing_Stock__c= 7000;
            appFinaceSum.Direct_Expenses__c= 7000;
            appFinaceSum.Purchases__c= 7000;
            appFinaceSum.Opening_Stock__c= 7000;
            appFinaceSum.Other_Operating_Income_IncomeIncidental__c= 7000;
            appFinaceSum.Total_Sales__c= 7000;
            appFinaceSum.Gross_Profit__c= 7000;
            appFinaceSum.Salary_to_Partner_Directors__c= 7000;
            appFinaceSum.Non_Operating_Expenses_FxLoss_AssetLoss__c= 7000;
            appFinaceSum.Interest_on_Partner_Capital__c= 7000;
            appFinaceSum.Depreciation__c= 7000;
            appFinaceSum.PAT__c= 7000;
        
			appFinaceSum.EBITDA__c = 43536;
        	appFinaceSum.Interest_on_Term_Loans__c = 23443;
            appFinaceSum.Interest_on_CC_OD_limits__c =453534;
        TriggerBase.bypass('Applicant_Financial_Summary__c');
       	insert appFinaceSum;
       	TriggerBase.clearBypass('Applicant_Financial_Summary__c');
        
        ApplBanking__c appBank = new ApplBanking__c();
        appBank.Appl__c = app.id;
        appBank.LoanAppl__c = la.id;
        appBank.Type__c ='Banking Summary';
        appBank.Summary_Type__c ='Combined Banking (OD/CC)';
        TriggerBase.bypass('ApplBanking__c');
       	insert appBank;
       	TriggerBase.clearBypass('ApplBanking__c');
        ApplBanking__c appBank1 = new ApplBanking__c();
        appBank1.Appl__c = app.id;
        appBank1.LoanAppl__c = la.id;
        appBank1.Type__c ='Banking Summary';
        appBank1.Summary_Type__c ='Combined Banking (CASA)';
        TriggerBase.bypass('ApplBanking__c');
       	insert appBank1;
       	TriggerBase.clearBypass('ApplBanking__c');
        ApplBankDetail__c appBankDetails = new ApplBankDetail__c();
        appBankDetails.ApplBanking__c = appBank.id;
        TriggerBase.bypass('ApplBankDetail__c');
       	insert appBankDetails;
       	TriggerBase.clearBypass('ApplBankDetail__c');
        ApplBankDetail__c appBankDetails1 = new ApplBankDetail__c();
        appBankDetails1.ApplBanking__c = appBank1.id;
        appBankDetails1.MinBalanceCharges__c = 'Y';
        TriggerBase.bypass('ApplBankDetail__c');
       	insert appBankDetails1;
       	TriggerBase.clearBypass('ApplBankDetail__c');
       
        ApplAsset__c appAsst = new ApplAsset__c();
        appAsst.LoanAppln__c = la.id;
        appAsst.Appl__c = app.id;
        TriggerBase.bypass('ApplAsset__c');
       	insert appAsst;
       	TriggerBase.clearBypass('ApplAsset__c');
        Id caseRt = Schema.SObjectType.Case.getRecordTypeInfosByName().get('CPVFI').getRecordTypeId();
        Case c = new Case();
        c.Loan_Application__c = la.id;
        c.ApplAssetId__c = appAsst.id;
        c.Applicant__c = app.id;
        c.ReportResult__c = 'Positive';
        c.Address_Type__c = 'Residence Address';
        c.RecordTypeId = caseRt;
        TriggerBase.bypass('Case');
       	insert c;
       	TriggerBase.clearBypass('Case');
        DedupeResponse__c dedupeRes = new DedupeResponse__c();
        dedupeRes.LoanAppln__c = la.id;
        dedupeRes.Applicant__c = app.id;
        TriggerBase.bypass('DedupeResponse__c');
       	insert dedupeRes;
       	TriggerBase.clearBypass('DedupeResponse__c');
        ApplicantEmployment__c appEmp = new ApplicantEmployment__c();
        appEmp.LoanApplicant__c = app.id;
        appEmp.NatureOfBusinessIndividual__c = 'M';
        TriggerBase.bypass('ApplicantEmployment__c');
       	insert appEmp;
       	TriggerBase.clearBypass('ApplicantEmployment__c');
        ApplRegltry__c appReg = new ApplRegltry__c();
        appReg.LoanAppln__c = la.id;
        TriggerBase.bypass('ApplRegltry__c');
       	insert appReg;
       	TriggerBase.clearBypass('ApplRegltry__c');
        btloan__c btLoan = new btloan__c();
        btLoan.LoanAppl__c = la.id;
        TriggerBase.bypass('btloan__c');
       	insert btLoan;
       	TriggerBase.clearBypass('btloan__c');
        Test.startTest();
        ObligationDetailsSummaryController.getfinancialSatement(la.id,'ApplicantDetails');
        ObligationDetailsSummaryController.fetchRecords(la.id);
        Test.stopTest();
    }
}